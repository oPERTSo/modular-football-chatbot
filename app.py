"""
Modular Football Chatbot Application
‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•‡πÅ‡∏ö‡∏ö Modular ‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÜ
"""

from flask import Flask, render_template, send_from_directory
from flask_cors import CORS
import os

# Import our modular components
from modules.config import get_api_keys, validate_api_keys

from modules.thai_football_bot import ThaiFootballAnalysisChatbot
from modules.api_handlers import APIHandlers

app = Flask(__name__)
CORS(app)

# Global chatbot instance
chatbot = None
api_handlers = None

def clean_text(text):
    import re
    # Remove surrogate characters
    text = re.sub(r'[\ud800-\udfff]', '', text)
    # Remove any remaining problematic unicode
    return ''.join(c for c in text if ord(c) < 0xD800 or ord(c) > 0xDFFF)
@app.route('/')
def index():
    """‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API"""
    return render_template('index.html')

# Route handlers using APIHandlers

@app.route('/chat', methods=['POST'])
def chat():
    """Chat endpoint"""
    result = api_handlers.chat_endpoint()
    if isinstance(result, str):
        return clean_text(result)
    return result

@app.route('/api/standings')
def api_standings():
    """‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô"""
    return api_handlers.standings_endpoint()

@app.route('/api/topscorers')
def api_topscorers():
    """‡∏î‡∏≤‡∏ß‡∏ã‡∏±‡∏•‡πÇ‡∏ß"""
    return api_handlers.topscorers_endpoint()

@app.route('/api/team-form')
def api_team_form():
    """‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡∏°"""
    return api_handlers.team_form_endpoint()

@app.route('/api/compare-teams')
def api_compare_teams():
    """‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ó‡∏µ‡∏°"""
    return api_handlers.compare_teams_endpoint()

@app.route('/api/last-results')
def api_last_results():
    """‡∏ú‡∏•‡∏ö‡∏≠‡∏•‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"""
    return api_handlers.last_results_endpoint()


@app.route('/api/news')
def api_news():
    """‡∏Ç‡πà‡∏≤‡∏ß‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•"""
    result = api_handlers.news_endpoint()
    if isinstance(result, str):
        return clean_text(result)
    return result


@app.route('/api/news/latest')
def api_latest_news():
    """‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î"""
    result = api_handlers.latest_news_endpoint()
    if isinstance(result, str):
        return clean_text(result)
    return result


@app.route('/api/news/search')
def api_search_news():
    """‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß"""
    result = api_handlers.search_news_endpoint()
    if isinstance(result, str):
        return clean_text(result)
    return result

@app.route('/api/fixtures/today')
def api_today_fixtures():
    """‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏Ç‡πà‡∏á‡∏Ç‡∏±‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ"""
    return api_handlers.today_fixtures_endpoint()

@app.route('/chat-ui')
def chat_ui():
    """‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó‡πÅ‡∏ö‡∏ö ChatGPT ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ü‡∏∏‡∏ï‡∏ö‡∏≠‡∏•"""
    return render_template('chat.html')

@app.route('/test-api.html')
def test_api():
    """‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Response"""
    return send_from_directory('.', 'test-api.html')

@app.route('/test-topscorer.html')
def test_topscorer():
    """‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö Topscorer API"""
    return send_from_directory('.', 'test-topscorer.html')

@app.route('/test-serie-a.html')
def test_serie_a():
    """‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö Serie A API"""
    return send_from_directory('.', 'test_serie_a_manual.html')

@app.route('/test-fuzzy-ui.html')
def test_fuzzy_ui():
    """‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö Enhanced Fuzzy Matching"""
    return send_from_directory('.', 'test_fuzzy_ui.html')

def initialize_app():
    """Initialize the application with modules"""
    global chatbot, api_handlers
    
    try:
        print("üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö Modular Football Chatbot...")
        
        # Load and validate API keys
        print("üîë ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Keys...")
        api_keys = get_api_keys()
        
        if not validate_api_keys(api_keys):
            print("‚ùå API Keys ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå .env")
            return False
        
        print("‚úÖ API Keys ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        
        # Initialize chatbot
        print("ü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ThaiFootballBot...")
        chatbot = ThaiFootballAnalysisChatbot(
            openai_api_key=api_keys['openai_key'],
            reference_folder="data"
        )
        
        # Initialize API handlers
        print("üîå ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô API Handlers...")
        api_handlers = APIHandlers(chatbot)
        
        print("üéØ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á...")
        if not chatbot.news_manager.get_all_files():
            print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á ‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ")
        else:
            news_count = len(chatbot.news_manager.get_all_files())
            print(f"üìã ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {news_count} ‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡πà‡∏≤‡∏ß")
        
        print("üöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!")
        return True
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """Main application entry point"""
    try:
        # Initialize the application
        if not initialize_app():
            print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ")
            return
        
        print("\n" + "="*60)
        print("üèÜ MODULAR FOOTBALL CHATBOT")
        print("="*60)
        print("üì° ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å: http://localhost:5000")
        print("ÔøΩ ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ä‡∏ó: http://localhost:5000/chat-ui")
        print("üî¥ ‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå")
        print("üß© ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ö Modular ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        print("üìÅ Static Files: templates/, static/css/, static/js/")
        print("="*60)
        
        # Run the Flask application
        app.run(host='0.0.0.0', port=5000, debug=False, use_reloader=False)
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
