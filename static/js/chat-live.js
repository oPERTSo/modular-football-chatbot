const chatMessages = document.getElementById('chatMessages');
const messageInput = document.getElementById('messageInput');
const sendButton = document.getElementById('sendButton');
const loadingMessage = document.getElementById('loadingMessage');
let isWelcomeShown = true;

// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL ‡∏Ç‡∏≠‡∏á Backend API
const API_BASE_URL = 'http://localhost:5000';

function scrollToBottom() {
    chatMessages.scrollTop = chatMessages.scrollHeight;
}

function hideWelcome() {
    if (isWelcomeShown) {
        const welcomeMessage = document.querySelector('.welcome-message');
        if (welcomeMessage) {
            welcomeMessage.style.display = 'none';
            isWelcomeShown = false;
        }
    }
}

function addMessage(content, isUser = false) {
    hideWelcome();
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `message ${isUser ? 'message-user' : 'message-bot'}`;
    
    const avatar = isUser ? 'üë§' : 'ü§ñ';
    const messageHTML = `
        <div class="message-avatar">${avatar}</div>
        <div class="message-content">${content}</div>
    `;
    
    messageDiv.innerHTML = messageHTML;
    chatMessages.appendChild(messageDiv);
    scrollToBottom();
}

function showLoading() {
    loadingMessage.style.display = 'block';
    scrollToBottom();
}

function hideLoading() {
    loadingMessage.style.display = 'none';
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Backend API
async function checkBackendStatus() {
    try {
        const response = await fetch(`${API_BASE_URL}/`, {
            method: 'GET',
            mode: 'cors'
        });
        
        if (response.ok) {
            document.querySelector('.chat-header .status-indicator').innerHTML = 'üü¢ ONLINE';
            document.querySelector('.chat-header .status-indicator').style.background = '#10b981';
            return true;
        }
    } catch (error) {
        document.querySelector('.chat-header .status-indicator').innerHTML = 'üî¥ OFFLINE';
        document.querySelector('.chat-header .status-indicator').style.background = '#ef4444';
        console.warn('Backend API is not running:', error);
        return false;
    }
    return false;
}

async function sendMessage(event) {
    event.preventDefault();
    
    const message = messageInput.value.trim();
    if (!message) return;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    addMessage(message, true);
    messageInput.value = '';
    sendButton.disabled = true;
    showLoading();

    try {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Backend ‡∏Å‡πà‡∏≠‡∏ô
        const isBackendOnline = await checkBackendStatus();
        
        if (!isBackendOnline) {
            hideLoading();
            addMessage(`
                ‚ùå <strong>‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö Backend API ‡πÑ‡∏î‡πâ</strong><br><br>
                ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:<br>
                1Ô∏è‚É£ ‡πÄ‡∏õ‡∏¥‡∏î Terminal ‡πÉ‡∏´‡∏°‡πà<br>
                2Ô∏è‚É£ ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: <code>cd "${window.location.pathname.replace('/index-live.html', '').replace('/', '')}"</code><br>
                3Ô∏è‚É£ ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: <code>python app.py</code><br>
                4Ô∏è‚É£ ‡∏£‡∏≠‡∏à‡∏ô‡πÄ‡∏´‡πá‡∏ô "üöÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"<br>
                5Ô∏è‚É£ ‡∏•‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            `);
            sendButton.disabled = false;
            messageInput.focus();
            return;
        }

        const response = await fetch(`${API_BASE_URL}/chat`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            mode: 'cors',
            body: JSON.stringify({ prompt: message })
        });

        const data = await response.json();
        
        hideLoading();
        
        if (response.ok) {
            let formattedResponse = data.response || data.message || '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ';
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô HTML ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (formattedResponse.includes('<!DOCTYPE html>') || formattedResponse.includes('<html>')) {
                // ‡πÄ‡∏õ‡πá‡∏ô HTML ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö - ‡πÅ‡∏¢‡∏Å‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô body
                const parser = new DOMParser();
                const doc = parser.parseFromString(formattedResponse, 'text/html');
                const bodyContent = doc.body.innerHTML;
                addMessage(bodyContent);
            } else if (formattedResponse.includes('<') && formattedResponse.includes('>')) {
                // ‡πÄ‡∏õ‡πá‡∏ô HTML fragment
                addMessage(formattedResponse);
            } else {
                // ‡πÄ‡∏õ‡πá‡∏ô text ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ - ‡πÅ‡∏õ‡∏•‡∏á markdown-style formatting
                // ‡πÅ‡∏õ‡∏•‡∏á **text** ‡πÄ‡∏õ‡πá‡∏ô <strong>text</strong>
                formattedResponse = formattedResponse.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
                
                // ‡πÅ‡∏õ‡∏•‡∏á *text* ‡πÄ‡∏õ‡πá‡∏ô <em>text</em>
                formattedResponse = formattedResponse.replace(/\*(.*?)\*/g, '<em>$1</em>');
                
                // ‡πÅ‡∏õ‡∏•‡∏á newlines ‡πÄ‡∏õ‡πá‡∏ô <br>
                formattedResponse = formattedResponse.replace(/\n/g, '<br>');
                
                addMessage(formattedResponse);
            }
        } else {
            addMessage('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + (data.error || '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ'));
        }
    } catch (error) {
        hideLoading();
        addMessage(`
            ‚ùå <strong>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</strong><br><br>
            ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:<br>
            ‚Ä¢ Backend API ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ô (python app.py)<br>
            ‚Ä¢ CORS Policy ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡πâ‡∏ô<br>
            ‚Ä¢ Network Error<br><br>
            <em>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Console ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</em>
        `);
        console.error('Error:', error);
    } finally {
        sendButton.disabled = false;
        messageInput.focus();
    }
}

function askQuestion(question) {
    messageInput.value = question;
    sendMessage({ preventDefault: () => {} });
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö suggestion chips
document.addEventListener('click', function(e) {
    if (e.target.classList.contains('suggestion-chip')) {
        const suggestion = e.target.textContent.replace(/^[üìä‚öΩüì∞üìàüî•üìÖ]\s*/, '');
        let question = '';
        
        switch(suggestion) {
            case '‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô':
                question = '‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏£‡πå‡∏•‡∏µ‡∏Å';
                break;
            case '‡∏î‡∏≤‡∏ß‡∏ã‡∏±‡∏•‡πÇ‡∏ß':
                question = '‡∏î‡∏≤‡∏ß‡∏ã‡∏±‡∏•‡πÇ‡∏ß ‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏£‡πå‡∏•‡∏µ‡∏Å';
                break;
            case '‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î':
                question = '‡∏Ç‡πà‡∏≤‡∏ß‡∏ö‡∏≠‡∏•‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ';
                break;
            case '‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡∏°':
                question = '‡∏ü‡∏≠‡∏£‡πå‡∏° 5 ‡∏ô‡∏±‡∏î ‡πÅ‡∏°‡∏ô‡∏¢‡∏π';
                break;
            case '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ó‡∏µ‡∏°':
                question = '‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö ‡πÅ‡∏°‡∏ô‡∏¢‡∏π vs ‡∏•‡∏¥‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏û‡∏π‡∏•';
                break;
            case '‡∏ú‡∏•‡∏ö‡∏≠‡∏•':
                question = '‡∏ú‡∏•‡∏ö‡∏≠‡∏•‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ';
                break;
            default:
                question = suggestion;
        }
        
        askQuestion(question);
    }
});

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
document.addEventListener('DOMContentLoaded', function() {
    // Focus on input
    messageInput.focus();
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Backend
    checkBackendStatus();
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    setInterval(checkBackendStatus, 30000);
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Live Server
    const welcomeText = document.querySelector('.welcome-message h3');
    if (welcomeText) {
        welcomeText.innerHTML = 'üöÄ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà Football AI (Live Server)!';
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
    const welcomeDesc = document.querySelector('.welcome-message p');
    if (welcomeDesc) {
        welcomeDesc.innerHTML = `
            ‡∏â‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö:<br>
            <small style="color: #64748b;">üí° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô <code>python app.py</code> ‡πÉ‡∏ô Terminal</small>
        `;
    }
});

// Enter to send message
messageInput.addEventListener('keypress', function(e) {
    if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        sendMessage(e);
    }
});
